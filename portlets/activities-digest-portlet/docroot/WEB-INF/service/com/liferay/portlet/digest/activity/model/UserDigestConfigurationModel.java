/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.portlet.digest.activity.model;

import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the UserDigestConfiguration service. Represents a row in the &quot;Digest_UserDigestConfiguration&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.liferay.portlet.digest.activity.model.impl.UserDigestConfigurationModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.liferay.portlet.digest.activity.model.impl.UserDigestConfigurationImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see UserDigestConfiguration
 * @see com.liferay.portlet.digest.activity.model.impl.UserDigestConfigurationImpl
 * @see com.liferay.portlet.digest.activity.model.impl.UserDigestConfigurationModelImpl
 * @generated
 */
public interface UserDigestConfigurationModel extends BaseModel<UserDigestConfiguration> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a user digest configuration model instance should use the {@link UserDigestConfiguration} interface instead.
	 */

	/**
	 * Returns the primary key of this user digest configuration.
	 *
	 * @return the primary key of this user digest configuration
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this user digest configuration.
	 *
	 * @param primaryKey the primary key of this user digest configuration
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the ID of this user digest configuration.
	 *
	 * @return the ID of this user digest configuration
	 */
	public long getId();

	/**
	 * Sets the ID of this user digest configuration.
	 *
	 * @param id the ID of this user digest configuration
	 */
	public void setId(long id);

	/**
	 * Returns the company ID of this user digest configuration.
	 *
	 * @return the company ID of this user digest configuration
	 */
	public long getCompanyId();

	/**
	 * Sets the company ID of this user digest configuration.
	 *
	 * @param companyId the company ID of this user digest configuration
	 */
	public void setCompanyId(long companyId);

	/**
	 * Returns the create date of this user digest configuration.
	 *
	 * @return the create date of this user digest configuration
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this user digest configuration.
	 *
	 * @param createDate the create date of this user digest configuration
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this user digest configuration.
	 *
	 * @return the modified date of this user digest configuration
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this user digest configuration.
	 *
	 * @param modifiedDate the modified date of this user digest configuration
	 */
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the user ID of this user digest configuration.
	 *
	 * @return the user ID of this user digest configuration
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this user digest configuration.
	 *
	 * @param userId the user ID of this user digest configuration
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this user digest configuration.
	 *
	 * @return the user uuid of this user digest configuration
	 * @throws SystemException if a system exception occurred
	 */
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this user digest configuration.
	 *
	 * @param userUuid the user uuid of this user digest configuration
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the frequency of this user digest configuration.
	 *
	 * @return the frequency of this user digest configuration
	 */
	public int getFrequency();

	/**
	 * Sets the frequency of this user digest configuration.
	 *
	 * @param frequency the frequency of this user digest configuration
	 */
	public void setFrequency(int frequency);

	public boolean isNew();

	public void setNew(boolean n);

	public boolean isCachedModel();

	public void setCachedModel(boolean cachedModel);

	public boolean isEscapedModel();

	public Serializable getPrimaryKeyObj();

	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	public ExpandoBridge getExpandoBridge();

	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public Object clone();

	public int compareTo(UserDigestConfiguration userDigestConfiguration);

	public int hashCode();

	public CacheModel<UserDigestConfiguration> toCacheModel();

	public UserDigestConfiguration toEscapedModel();

	public UserDigestConfiguration toUnescapedModel();

	public String toString();

	public String toXmlString();
}